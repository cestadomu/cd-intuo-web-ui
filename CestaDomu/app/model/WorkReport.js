/*
 * File: app/model/WorkReport.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CestaDomu.model.WorkReport', {
    extend: 'Ext.data.Model',

    requires: [
        'Ext.data.Field'
    ],

    config: {
        idProperty: 'ID',
        fields: [
            {
                name: 'ID',
                type: 'auto'
            },
            {
                name: 'TypeClass',
                type: 'string'
            },
            {
                name: 'start',
                type: 'date'
            },
            {
                name: 'durationtime',
                type: 'int'
            },
            {
                name: 'transportDuration',
                type: 'int'
            },
            {
                name: 'AppointmentStart',
                type: 'date'
            },
            {
                name: 'AppointmentEnd',
                type: 'date'
            },
            {
                name: 'ServiceType',
                type: 'string'
            },
            {
                name: 'wayOfWorking',
                type: 'string'
            },
            {
                name: 'documentationWayOfWorking',
                type: 'string'
            },
            {
                name: 'DaysOfHoliday',
                type: 'float'
            },
            {
                name: 'TypeOfAbsence',
                type: 'string'
            },
            {
                convert: function(v, rec) {
                    var label = rec.get('TypeClass');

                    try {
                        switch(rec.get('TypeClass')) {
                            case 'Výkaz práce':
                            label += ' (' + rec.get('ServiceType') + ', ' + rec.get('wayOfWorking') + '), ';
                            label += ' ' + Ext.Date.format(rec.get('start'), 'd. m. Y') + ', ';
                            label += rec.get('durationtime') + '/' + rec.get('transportDuration') + ' min';
                            break;
                            case 'Výkaz práce na dokumentaci':
                            label += ' (' + rec.get('ServiceType') + ', ' + rec.get('documentationWayOfWorking') + '), ';
                            label += ' ' + Ext.Date.format(rec.get('start'), 'd. m. Y') + ', ';
                            label += rec.get('durationtime') + '/' + rec.get('transportDuration') + ' min';
                            break;
                            case 'Dovolená':
                            label += ' (' + rec.get('TypeOfAbsence') + '), ';
                            label += Ext.Date.format(rec.get('AppointmentStart'), 'd. m. Y') + ' - ';
                            label += Ext.Date.format(rec.get('AppointmentEnd'), 'd. m. Y');
                            break;
                        }
                    } catch (err) {
                        label = ""; // Na hodnotu prázdného řetězce je navázáno červené pozadí v seznamu!
                    }
                    return label;
                },
                name: 'label'
            }
        ]
    }
});