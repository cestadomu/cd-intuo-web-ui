/*
 * File: app/controller/NewNurseCareController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CestaDomu.controller.NewNurseCareController', {
    extend: 'Ext.app.Controller',

    requires: [
        'Ext.app.Route'
    ],

    config: {
        routes: {
            'private/new-care/:pacientId': 'main'
        },

        refs: {
            mainContainer: 'mainContainer',
            newNurseCareView: {
                autoCreate: true,
                selector: 'newNurseCareView',
                xtype: 'newNurseCareView'
            },
            wayOfWorking: 'newNurseCareView #wayOfWorking',
            date: 'newNurseCareView #date',
            hour: 'newNurseCareView #hour',
            minute: 'newNurseCareView #minute',
            workDuration: 'newNurseCareView #workDuration',
            documentationDuration: 'newNurseCareView #documentationDuration',
            transportDuration: 'newNurseCareView #transportDuration',
            serviceType: 'newNurseCareView #serviceType',
            formWork: 'newNurseCareView #formWork',
            toolbar: 'newNurseCareView toolbar',
            aggreement: 'newNurseCareView #aggreement',
            description: 'newNurseCareView #description'
        },

        control: {
            "newNurseCareView #save": {
                tap: 'onSave'
            }
        }
    },

    onSave: function(button, e, eOpts) {
        CestaDomu.controller.Login.doLogged(this, function() {
            var start = this.getDate().getValue();
            start.setHours(this.getHour().getValue());
            start.setMinutes(this.getMinute().getValue());

            var care = Ext.create('CestaDomu.model.NurseCare', {
                startDate: start,
                Name: this.getAggreement().getValue(),
                Description: this.getDescription().getValue(),
                durationtime: this.getWorkDuration().getValue()
            });


            Ext.Msg.show({
                title: "Ukládám...",
                buttons: []
            });
            care.save({
                params: {
                    pacientId: this.pacient.get('ID'),
                    contactId: this.pacient.get('contactId'),
                    classId: 57081
                },
                failure: function() {
                    Ext.Msg.alert('Chyba', 'Nepodařilo se uložit záznam, zkuste to prosím za chvíli.');
                },
                success: function(careRecord, operation) {
                    var workReport = Ext.create('CestaDomu.model.RawWorkReport', {
                        startDate: start,
                        Class: 85953,
                        durationtime: this.getWorkDuration().getValue(),
                        transportDuration: this.getTransportDuration().getValue(),
                        ServiceTypeID: this.getServiceType().getValue(),
                        wayOfWorking: this.getWayOfWorking().getValue(),
                        formWork: this.getFormWork().getValue(),
                        Description: this.getDescription().getValue()
                    });
                    workReport.save({
                        params: {
                            pacientId: this.pacient.get('ID'),
                            contactId: this.pacient.get('contactId'),
                            careId: careRecord.get('ID')
                        },
                        failure: function() {
                            Ext.Msg.alert('Chyba', 'Nepodařilo se uložit výkaz práce k zápisu, opravte prosím vytvořená data v Intuu ručně.');
                        },
                        success: function(workReportRecord, operation) {
                            var docReport = Ext.create('CestaDomu.model.RawDocReport', {
                                startDate: start,
                                Class: 85954,
                                durationtime: this.getDocumentationDuration().getValue(),
                                wayOfWorking: 1858, //výkaz práce je vždy nepohotovost
                                documentationWayOfWorking: 1858, //výkaz práce je vždy nepohotovost
                                Description: this.getDescription().getValue()
                            });
                            docReport.save({
                                params: {
                                    pacientId: this.pacient.get('ID'),
                                    contactId: this.pacient.get('contactId'),
                                    careId: careRecord.get('ID'),
                                    reportId: workReportRecord.get('ID')
                                },
                                failure: function() {
                                    Ext.Msg.alert('Chyba', 'Nepodařilo se uložit výkaz práce na dokumentaci k zápisu, opravte prosím vytvořená data v Intuu ručně.');
                                },
                                success: function(docReportRecord, operation) {
                                    Ext.Msg.alert('Uloženo', 'Průběh péče (ID:'+careRecord.get('ID')+'), výkaz práce (ID:'+workReportRecord.get('ID')+'), výkaz práce na dokumentaci (ID:'+docReportRecord.get('ID')+').',
                                                  function () {
                                                      this.getApplication().fireEvent("pacientSelected", this.pacient.get('contactId'), this.pacient.get('ID'), this.pacient.get('Name'));
                                                  }, this);
                                }
                            }, this);
                        }
                    }, this);
                }
            }, this);
        });
    },

    onNewNurseCareRequested: function(pacientId) {
        this.getApplication().redirectTo("private/new-care/"+pacientId);
    },

    main: function(pacientId) {
        this.getApplication().fireEvent("loginRequested", this, function () {
            var messageBox = Ext.Msg.show({
                title: "Načítám data...",
                buttons: []
            });

            this.getNewNurseCareView(); // inicializace pomocí autoload

            var Pacient = Ext.ModelManager.getModel('CestaDomu.model.Pacient');

            Pacient.load(pacientId, {
                scope: this,
                success: function(pacient) {

                    this.pacient = pacient;

                    var now = new Date();
                    this.getDate().setValue(now);
                    this.getHour().setValue(now.getHours());
                    this.getMinute().setValue(now.getMinutes());

                    this.getWayOfWorking().getStore().load(function (records, operation, success) {
                        if (success) {
                            this.getWayOfWorking().setValue(1858); // Nepohotovost (1)
                        }
                    }, this);
                    this.getServiceType().getStore().load(function (records, operation, success) {
                        if (success) {
                            this.getServiceType().setValue(558); // Z - Návštěva (17)
                        }
                    }, this);
                    this.getFormWork().getStore().load(function (records, operation, success) {
                        if (success) {
                            this.getFormWork().setValue(1856); // Teréní (3)
                        }
                    }, this);

                    this.getToolbar().setTitle('Nový průběh péče u '+this.pacient.get('Name'));

                    this.getMainContainer().setActiveItem(this.getNewNurseCareView());

                    messageBox.hide();
                },
                failure: function () {
                    Ext.Msg.alert('Chyba', 'Nepodařilo se načíst data.');
                }
            });
        });

        //CestaDomu.controller.Login.doLogged(this, );

    },

    init: function(application) {

        application.on([
        { event: 'newNurseCareRequested', fn: this.onNewNurseCareRequested, scope: this }
        ]);
    }

});